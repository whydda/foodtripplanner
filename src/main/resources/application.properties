#spring pid 생성 경로
spring.pid.file=foodplanner.pid

#view 설정
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp
#server.error.whitelabel.enabled=true

#서버설정
server.tomcat.uri-encoding=UTF-8

#session timeout
spring.session.timeout=1800

#session store
spring.session.store-type=redis

#세션 타임아웃(초) : 30분
server.servlet.session.timeout=30m

#properties setting
#{dev:개발, staging:테스트환경, prod:운영}
spring.profiles.active=dev
  #// 이정보를 가지고 파일 읽어 드림 dev면  application-dev.properties 이 설정파일 읽어 들여

#SCAN FILTER 설정
server.tomcat.additional-tld-skip-patterns=jaxb-*.jar

#reload 설정 추가
spring.devtools.livereload.enabled=true
server.servlet.jsp.init-parameters.development=true

#파일업로드 경로 Windows의 경우 C:\, Linux의 경우 / 로 시작한다.
file.upload.path=/files/foodplanner

#actuator setting
smtp.auth.id=123
smtp.auth.passwd=

## THYMELEAF (ThymeleafAutoConfiguration)
## Enable template caching.
#spring.thymeleaf.cache=false
## Check that the template exists before rendering it.
#spring.thymeleaf.check-template=true
## Check that the templates location exists.
#spring.thymeleaf.check-template-location=true
## Content-Type value.
#spring.thymeleaf.servlet.content-type=text/html
## Enable MVC Thymeleaf view resolution.
#spring.thymeleaf.enabled=true
## Template encoding.
#spring.thymeleaf.encoding=UTF-8
##spring.thymeleaf.excluded-view-names= # Comma-separated list of view names that should be excluded from resolution.
## Template mode to be applied to templates. See also StandardTemplateModeHandlers.
#spring.thymeleaf.mode=HTML5
## Prefix that gets prepended to view names when building a URL.
#spring.thymeleaf.prefix=classpath:/templates
## Suffix that gets appended to view names when building a URL.
#spring.thymeleaf.suffix=.html
##spring.thymeleaf.template-resolver-order= # Order of the template resolver in the chain.
##spring.thymeleaf.view-names= # Comma-separated list of view names that can be resolved.

# SPRING RESOURCES HANDLING (ResourceProperties)
#spring.resources.add-mappings=true # Enable default resource handling.
#spring.resources.cache-period= # Cache period for the resources served by the resource handler, in seconds.
#spring.resources.chain.cache=true # Enable caching in the Resource chain.
#spring.resources.chain.enabled= # Enable the Spring Resource Handling chain. Disabled by default unless at least one strategy has been enabled.
#spring.resources.chain.gzipped=false # Enable resolution of already gzipped resources.
#spring.resources.chain.html-application-cache=false # Enable HTML5 application cache manifest rewriting.
#spring.resources.chain.strategy.content.enabled=false # Enable the content Version Strategy.
#spring.resources.chain.strategy.content.paths=/** # Comma-separated list of patterns to apply to the Version Strategy.
#spring.resources.chain.strategy.fixed.enabled=false # Enable the fixed Version Strategy.
#spring.resources.chain.strategy.fixed.paths=/** # Comma-separated list of patterns to apply to the Version Strategy.
#spring.resources.chain.strategy.fixed.version= # Version string to use for the Version Strategy.
#spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/ # Locations of static resources.
